.grid {
  display: grid;
  grid-template-rows: repeat(1, 1fr);
  grid-template-columns: repeat(var(--columns, 1), 1fr);
  gap: $spacer;
  width: 100%;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $breakpoint-infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include breakpoint-min-width($breakpoint, $grid-breakpoints) {
    @for $i from 1 through $grid-columns {
      .grid#{$breakpoint-infix}-#{$i} {
        --columns: #{ $i };
      }
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $breakpoint-infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include breakpoint-min-width($breakpoint, $grid-breakpoints) {
    @for $i from 1 through $grid-utility-columns {
      .col#{$breakpoint-infix}-#{$i} {
        grid-column: auto/ span $i;
      }
    }

    .col#{$breakpoint-infix}-full {
      grid-column: 1 / -1;
    }

    @for $i from 1 through $grid-utility-columns {
      .col-start#{$breakpoint-infix}-#{$i} {
        grid-column-start: $i;
      }
    }

    @each $key, $value in $gaps {
      .gap#{$breakpoint-infix}-#{$key} {
        gap: #{$value};
      }
    }

    @each $key, $value in $orders {
      .order#{$breakpoint-infix}-#{$key} {
        order: #{$value};
      }
    }
  }
}
