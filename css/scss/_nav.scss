/* stylelint-disable no-descending-specificity */
.nav {
  display: flex;
  height: map-get($nav-sizes, "md");

  .container,
  .container-fluid {
    display: flex;
  }

  &.nav-sm {
    height: map-get($nav-sizes, "sm");
  }

  &.nav-lg {
    height: map-get($nav-sizes, "lg");
  }
}

.nav-bar {
  display: flex;
  align-content: stretch;
  flex-direction: row;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.nav-brand {
  font-size: 1.25rem;
  font-weight: 700;
  display: flex;
  align-items: center;
  margin-right: 1rem;
  text-decoration: none;

  &:hover {
    text-decoration: none;
    color: inherit;
  }
}

.nav-item {
  display: flex;
  flex-direction: column;
  align-content: stretch;
  justify-content: center;
}

.nav-btn-expand {
  display: inline-flex;
  align-self: center;
  margin-left: auto;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  cursor: pointer;
  user-select: none;
  width: 2.5rem;
  height: 2.5rem;
  font-size: 1.25rem;
  padding: 0;
  border-radius: $border-radius-sm;
  line-height: 1;
  transition: all .2s ease-in-out, box-shadow .2s ease-in-out;
  font-weight: 600;
  text-decoration: none;
  border: none;

  &:focus {
    box-shadow: 0 0 0 3px rgba(map-get($accent, 500), .4);
  }

  &:hover {
    background-color: rgba($dark, .1);
    border-color: map-get($accent, 700);
  }
}

.nav-link {
  padding: 0;
  text-decoration: none;
  display: inline-block;

  &:focus {
    box-shadow: 0 0 0 3px rgba(map-get($accent, 500), .4);
    outline: none;
  }

  :not(:first-child) > & {
    margin-left: 1rem;
  }
}

.nav-light {
  .nav-link {
    color: rgba($dark, .65);

    &.active,
    &:hover,
    &:focus {
      color: $dark;
    }
  }

  .nav-brand,
  .nav-btn-expand {
    color: $dark;
  }
}

.nav-dark {
  .nav-link {
    color: rgba($light, .65);

    &.active,
    &:hover,
    &:focus {
      color: $light;
    }
  }

  .nav-brand,
  .nav-btn-expand {
    color: $light;
  }
}

.nav-collapse-header {
  display: none;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $breakpoint-suffix: breakpoint-suffix($breakpoint, $grid-breakpoints);

  @include breakpoint-min-width($breakpoint, $grid-breakpoints) {
    .nav-collapse#{$breakpoint-suffix} {
      flex-grow: 1;

      .nav-collapse-body {
        display: flex;
        flex-grow: 1;
        height: 100%;
      }
    }
  }

  @include breakpoint-max-width($breakpoint, $grid-breakpoints) {
    .nav-collapse#{$breakpoint-suffix} {
      position: fixed;
      background: rgba(#fff, .95);
      z-index: 1050;
      display: flex;
      flex-direction: column;
      visibility: hidden;
      background-clip: padding-box;
      outline: 0;
      transition: transform .2s ease-in-out;

      @supports (backdrop-filter: blur(15px) saturate(350%)) {
        background: rgba(#fff, .85);
        backdrop-filter: blur(15px) saturate(250%);
      }

      &.showing,
      &.hiding,
      &.show {
        visibility: visible;
      }

      &.showing,
      &.show:not(.hiding) {
        transform: none;
      }

      &.nav-collapse-start {
        top: 0;
        left: 0;
        bottom: 0;
        width: 360px;
        max-width: 100%;
        border-right: $border-width solid $border-color;
        transform: translateX(-100%);
      }

      &.nav-collapse-end {
        top: 0;
        right: 0;
        bottom: 0;
        width: 360px;
        max-width: 100%;
        border-left: $border-width solid $border-color;
        transform: translateX(100%);
      }

      .nav-collapse-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 $spacer;
        height: map-get($nav-sizes, "md");
        border-bottom: $border-width solid $border-color;
        flex-shrink: 0;

        .nav-collapse-title {
          margin: 0;
        }
      }

      .nav-collapse-body {
        overflow-y: auto;
        flex-grow: 1;
        padding: 1rem;

        .nav-bar {
          display: grid !important;
          grid-template-rows: repeat(1, 1fr);
          grid-template-columns: repeat(2, minmax(0, 1fr));
          column-count: 2;
          gap: 1rem;

          &:not(:first-child) {
            padding-top: 1rem;
            margin-top: 1rem;
            border-top: $border-width solid $border-color;
          }
        }

        .nav-link {
          color: rgba($dark, .65);
          grid-column: auto/ span 1;
          margin-left: 0;

          &.active,
          &:hover,
          &:focus {
            color: $dark;
          }
        }

        .nav-brand,
        .nav-btn-expand {
          color: $dark;
        }
      }
    }
  }
}
